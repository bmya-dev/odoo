<?xml version="1.0" encoding="UTF-8"?>
<odoo>
    <data noupdate="False">
    <!-- <data noupdate="True"> -->

        <record model='base.validator' id='validator_numero_factura'>
            <field name='name'>Numeración de Documento Tributario</field>
            <field name='input_test_string'>1123</field>
            <field name="validation_code"><![CDATA[
# Python code. Use:
#  -  failed = True: specify that the document_number is not valid.
#  -  document_number = 'something': overwrite document_number value (for formatting for eg.).
# You can use the following:
#  - re: regex Python library
#  - self: browse_record of the current document type browse_record
#  - document_number: string with the document_number to validate
if not value:
    pass
else:
    value = '{:>06s}'.format(re.sub("\D", "", value))
            ]]></field>
            <field name='help_message'><![CDATA[
La validación del Folio de Documento Tributario falló.
            ]]></field>
        </record>

        <record model='base.validator' id='validator_despacho'>
            <field name='name'>Despacho de importación</field>
            <field name='input_test_string'>16052IC04000605L</field>
            <field name="validation_code"><![CDATA[
# Python code. Use:
#  -  failed = True: specify that the value is not valid.
#  -  value = 'something': overwrite value value (for formatting for eg.).
# You can use the following:
#  - re: regex Python library
#  - self: browse_record of the current document type browse_record
#  - value: string with the value to validate
if value:
    if len(value) != 16:
        failed = True
    parts = [value]
            ]]></field>
            <field name='help_message'><![CDATA[
El número de despacho de importación debe tener 16 caractéres
            ]]></field>
        </record>
        <record model='base.validator' id='validator_delivery_guide'>
            <field name='name'>Numeración de Guía de Despacho</field>
            <field name='input_test_string'>21123</field>
            <field name="validation_code"><![CDATA[
# Python code. Use:
#  -  failed = True: specify that the document_number is not valid.
#  -  document_number = 'something': overwrite document_number value (for formatting for eg.).
# You can use the following:
#  - re: regex Python library
#  - self: browse_record of the current document type browse_record
#  - document_number: string with the document_number to validate
if not value:
    pass
else:
    value = '{:>06s}'.format(re.sub("\D", "", value))
            ]]></field>
            <field name='help_message'><![CDATA[
La validación de la guía de despacho falló.
            ]]></field>
        </record>
    </data>
</odoo>
